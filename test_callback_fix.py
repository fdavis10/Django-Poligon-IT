
#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞
"""

import os
import sys
import django

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É Django
sys.path.append('/workspace/Django-Poligon-IT/backend')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'poligon_it.settings')
django.setup()

from main.models import CallbackRequest
from main.views import callback_request
from django.test import RequestFactory
import json

def test_callback_model():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ CallbackRequest"""
    print("=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–µ–ª–∏ CallbackRequest ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    try:
        count = CallbackRequest.objects.count()
        print(f"‚úÖ –ú–æ–¥–µ–ª—å CallbackRequest –¥–æ—Å—Ç—É–ø–Ω–∞. –ó–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ: {count}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–æ–¥–µ–ª–∏: {e}")
        return False
    
    return True

def test_callback_view():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è callback_request"""
    print("\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è callback_request ===")
    
    factory = RequestFactory()
    
    # –¢–µ—Å—Ç 1: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å
    print("–¢–µ—Å—Ç 1: –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º")
    data = {
        'name': '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
        'phone': '+7 (999) 123-45-67'
    }
    request = factory.post('/callback/', 
                          data=json.dumps(data),
                          content_type='application/json')
    
    try:
        response = callback_request(request)
        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {response.status_code}")
        print(f"‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {response.content.decode()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    print("\n–¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å –±–µ–∑ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    data = {
        'name': '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'
    }
    request = factory.post('/callback/', 
                          data=json.dumps(data),
                          content_type='application/json')
    
    try:
        response = callback_request(request)
        print(f"‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω: {response.status_code}")
        print(f"‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {response.content.decode()}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False
    
    return True

def test_migration():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏"""
    print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ ===")
    
    try:
        from django.db import connection
        with connection.cursor() as cursor:
            cursor.execute("SELECT * FROM main_callbackrequest LIMIT 1")
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ main_callbackrequest —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–∞–±–ª–∏—Ü–µ: {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –∑–≤–æ–Ω–∫–∞...")
    
    success = True
    success &= test_migration()
    success &= test_callback_model()
    success &= test_callback_view()
    
    if success:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print("\n‚ùå –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã")
        sys.exit(1)
