<<<<<<< HEAD
version: '3.8'
=======
version: '3.9'
>>>>>>> 3281c1d (production)

services:
  web:
    build: .
<<<<<<< HEAD
    working_dir: /app
    command: ["gunicorn", "poligon_it.wsgi:application", "--bind", "0.0.0.0:8000"]
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - .env

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  celery:
    build: .
    working_dir: /app
    command: ["celery", "-A", "poligon_it.poligon_it", "worker", "--loglevel=info"]
    depends_on:
      - redis
      - db
    env_file:
      - .env

  celery-beat:
    build: .
    working_dir: /app
    command: ["celery", "-A", "poligon_it.poligon_it", "beat", "--loglevel=info"]
    depends_on:
      - redis
      - db
    env_file:
      - .env
=======
    command: gunicorn poligon_it.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
      - ./media:/app/media
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    entrypoint: ["/app/entrypoint.sh"]
    environment:
    - RUN_MIGRATIONS=true

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./backend/media:/app/backend/media
    depends_on:
      - web



  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  celery:
    build: .
    command: celery -A poligon_it worker --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis

  celery-beat:
    build: .
    command: celery -A poligon_it beat --loglevel=info
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis

  bot:
    build: .
    command: python backend/tg_bot/run_bot.py
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - web
      - redis
>>>>>>> 3281c1d (production)

volumes:
  postgres_data:
