
services:
  db:
    image: postgres:13
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"

  web:
    build: .
    restart: always
    entrypoint: ["sh", "/app/entrypoint.sh"]
    command: python /app/poligon_it/manage.py runserver 0.0.0.0:8000
    env_file: .env
    environment:
      - IN_DOCKER=True
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis

  celery:
    build: .
    restart: always
    entrypoint: ["sh", "/app/entrypoint.sh"]
    command: celery -A poligon_it.celery worker --loglevel=info
    env_file: .env
    environment:
      - IN_DOCKER=True
    depends_on:
      - redis
      - web
    
  celery-beat:
    build: .
    restart: always
    command: celery -A poligon_it.celery beat --loglevel=info
    environment:
      - IN_DOCKER=True
    volumes:
      - .:/app
    depends_on:
      - redis
      - celery
    env_file:
      - .env

  
  telegram:
    build: .
    restart: always
    command: python tg_bot/run_bot.py
    env_file: .env
    environment:
      - Token=${TOKEN}
      - BOT_PASSWORD=${BOT_PASSWORD}
    depends_on:
      - web
      - celery
      - db

volumes:
  postgres_data: